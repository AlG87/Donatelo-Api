// <auto-generated />
using System;
using Donatelo.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Donatelo.Api.Migrations
{
    [DbContext(typeof(AppdbContext))]
    partial class AppdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Donatelo.Api.Entities.DonacionDto", b =>
                {
                    b.Property<int>("DonacionId")
                        .HasColumnType("int")
                        .HasColumnName("DonacionId");

                    b.Property<int>("BeneficiadoId")
                        .HasColumnType("int");

                    b.Property<int>("DonanteId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PublicacionId")
                        .HasColumnType("int");

                    b.Property<int>("sedeid")
                        .HasColumnType("int");

                    b.HasKey("DonacionId")
                        .HasName("PK_DonacionId");

                    b.ToTable("Donaciones", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.EstadoDonacionDto", b =>
                {
                    b.Property<int>("estadoid")
                        .HasColumnType("int")
                        .HasColumnName("EstadoID");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("estadoid")
                        .HasName("FK_EstadoID");

                    b.ToTable("EstadoDonacion", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.EstadoPublicacionDto", b =>
                {
                    b.Property<int>("estadoid")
                        .HasColumnType("int")
                        .HasColumnName("EstadoID");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("estadoid")
                        .HasName("FK_EstadoID");

                    b.ToTable("EstadoPublicacion", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.NotificacionesDto", b =>
                {
                    b.Property<int>("Notificacionid")
                        .HasColumnType("int")
                        .HasColumnName("NotificacionId");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Leido")
                        .HasColumnType("bit");

                    b.Property<string>("Mnesaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuariod")
                        .HasColumnType("int");

                    b.HasKey("Notificacionid")
                        .HasName("PK_NotificacionId");

                    b.ToTable("Notificaciones", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.PublicacionDto", b =>
                {
                    b.Property<int>("PublicacionId")
                        .HasColumnType("int")
                        .HasColumnName("PublicacionId");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PublicacionId")
                        .HasName("PK_PublicacionId");

                    b.ToTable("Publicaciones", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.RolTypeDto", b =>
                {
                    b.Property<int>("Rolid")
                        .HasColumnType("int")
                        .HasColumnName("RolId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rolid")
                        .HasName("PK_RolId");

                    b.ToTable("roltype", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.SedeDto", b =>
                {
                    b.Property<int>("SedeId")
                        .HasColumnType("int")
                        .HasColumnName("SedeId");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SedeId")
                        .HasName("PK_SedeId");

                    b.ToTable("Sedes", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.SolicitudesDonacionDto", b =>
                {
                    b.Property<int>("solicitudId")
                        .HasColumnType("int")
                        .HasColumnName("SolicitudId");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("beneficiadoid")
                        .HasColumnType("int");

                    b.Property<int>("donacionid")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaSolicitud")
                        .HasColumnType("datetime2");

                    b.HasKey("solicitudId")
                        .HasName("PK_SolicitudId");

                    b.ToTable("SolicitudesDonacion", (string)null);
                });

            modelBuilder.Entity("Donatelo.Api.Entities.UsuarioDto", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId")
                        .HasName("PK_UsuarioId");

                    b.ToTable("usuarios", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
